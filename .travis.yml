language: generic

sudo: false

env:
  global:
    - secure: "I2pTINMXgSMiMIfIXytpb/wdzduRLJakaJ6pDoIq3/O2l9IXfqWgfvo680aZQaU/3AuZT2V+vlpuCXHPFSI9lqRGoF0gOJYnve9IgM8e9PJjcaWWVeZJlwcEFeR08nl0TWR2BhLjXZAdEYKgE/192HeDkRFWFf8qBlLdun7zDZ7fDk/3v4A679qM+hvHYYb4zBj1+2o6Q+dnw3SsN+3r8+wMjcAuIPjnIGBkE5YqKgPir1Z7OSaFtmvtttzep5HelbNNW0ybWoGHCjbXlUAO7Gs3HFutJBbLrdL64L1MrQ94pVFyQBxzRIHDJ65wSFyJQtCGncx/DkCdqn5yu6zN+fLFiLmNt9vqsgzC4MtA9jpbRcRbJ+wpMm8JV6NmA1J1NDE8C8RN5QnLOTYtlyYOZmIF1juldAJTKi3ZwZ6ADir4JKuyLHvrzg3Auap9qZXlzucGsY8c8oNh/AiWlde400q1YRetkpU5SbehLL6UNKyuNAYC6Lryh878d/Xw3F4AoJfX1J6KEtWAdlqkqRjpFNXQhcsCPlVopQZpsL0xdp1xT2rcaB2Yjn+paUDRm8aQ2tEdTlTNWygj9bqUaLNI2Rcix+1uf0GcgH/TbeCfGi3EVsHQnJK9td38r9DGw0UYY6TzAyH4g4dw6Zw7Wwl9xPtSJXWKfcEMgawFoPZCOFU="

matrix:
  fast_finish: true
  include:
    - os: linux
      env: TEST_TARGET=coding_standards
    - os: linux
      env: TEST_TARGET=notebooks
    - os: linux
      env: TEST_TARGET=publish
    - os: osx
      env: TEST_TARGET=notebooks
  allow_failures:
    - os: osx
      env: TEST_TARGET=notebooks

before_install:
  - if [ "$TRAVIS_OS_NAME" == "osx" ]; then URL="https://repo.continuum.io/miniconda/Miniconda3-latest-MacOSX-x86_64.sh" ; fi
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then URL="https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh" ; fi
  # GUI (R png figures).
  - if [ "$TRAVIS_OS_NAME" == "linux" ]; then export DISPLAY=:99.0 ; sh -e /etc/init.d/xvfb start ; fi
  - wget $URL -O miniconda.sh
  - bash miniconda.sh -b -p $HOME/miniconda
  - export PATH="$HOME/miniconda/bin:$PATH"
  - hash -r
  - conda config --set always_yes yes --set changeps1 no
  - conda update --quiet --quiet conda

install:
  - conda env create --quiet --file "environment.yml"
  - source activate "ocean_figures"
  # Publish docs and lint code.
  - conda install --yes --quiet -c conda-forge doctr flake8
  # Debug.
  - conda info -a
  - conda list

script:
  # Default test is mostly codding standards.
  # The notebook PEP 8 test ignore:
  # W391: blank line at end of file (always present when using nbconvert)
  # E226: missing whitespace around arithmetic operator (not enforced by PEP 8)
  # E402: module level import not at top of file (in notebooks it is clearer to import in the first cell the module is used.)
  # In addition the magic cells are skipped with `grep -v '^get_ipython'` b/c they are not compliant when converted to script.
  - if [ $TEST_TARGET == 'coding_standards' ]; then
      find . -type f -name "*.py" ! -name "conf.py" | xargs flake8 --max-line-length=100 ;
      for file in $(find . -type f -name "*.ipynb"); do jupyter nbconvert --template=tests/strip_markdown.tpl --stdout --to python $file | grep -v '^get_ipython' | flake8 - --ignore=W391,E226,E402 --max-line-length=100 --show-source ; done ;
    fi
  # Test the blog notebook.
  - if [ $TEST_TARGET == 'notebooks' ]; then
      cd tests && python test_notebooks.py ;
    fi
  # Publish the notebooks.
  - if [ $TEST_TARGET == 'publish' ]; then
      cd webpage && python make_index.py && cd ..;
      find notebooks/ -maxdepth 1 -name \*.ipynb -print0 | xargs -0 -n1 jupyter nbconvert --to=markdown --template="jupyter-jekyll.tpl" --output-dir=webpage/_notebooks ;
      doctr deploy --built-docs=webpage --gh-pages-docs . ;
    fi
